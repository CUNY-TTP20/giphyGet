{"version":3,"sources":["Components/css/main.module.css","Components/giftTile.jsx","Components/searchbox.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","GifTile","className","classes","tile","src","this","props","imgSource","alt","title","image","style","width","height","objectFit","display","boxShadow","topPadding","fontFamily","Component","API","process","range","start","end","foo","i","push","console","log","SearchBox","handleSubmit","event","preventDefault","axios","get","state","searchString","then","res","data","url_list","pagination","count","map","images","downsized_large","url","setState","gif_list","total","picAvailable","catch","err","handleRandom","random","regular","trending","handleRegular","handleChange","value","target","handleTrending","picList","mainDiv","buttonDiv","type","name","checked","onClick","onSubmit","placeholder","onChange","left","position","borderRadius","textAlign","color","maxHeight","overflow","gridTemplateColumns","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.640dd958.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonDiv\":\"main_buttonDiv__2HM2v\",\"mainDiv\":\"main_mainDiv__3DZXw\",\"tile\":\"main_tile__1FwD3\",\"shake\":\"main_shake__2j4Ym\"};","import React, { Component } from \"react\";\r\nimport classes from \"./css/main.module.css\";\r\nclass GifTile extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.tile}>\r\n        <div>\r\n          <img\r\n            src={this.props.imgSource}\r\n            alt={this.props.title}\r\n            className={classes.image}\r\n            style={{\r\n              width: \"300px\",\r\n              height: \"300px\",\r\n              objectFit: \"fit\",\r\n              display: \"block\",\r\n              boxShadow: \"0 10px 20px rgba(0,0,0,.7)\",\r\n            }}\r\n          ></img>\r\n        </div>\r\n        <h2 style={{ topPadding: \"10px\", fontFamily: \"Architects Daughter\" }}>\r\n          {this.props.title}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GifTile;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport classes from \"./css/main.module.css\";\r\nimport GifTile from \"./giftTile\";\r\nconst API = process.env.REACT_APP_API;\r\nconsole.log(API);\r\nclass SearchBox extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchString: \"\",\r\n      regular: true,\r\n      random: false,\r\n      trending: false,\r\n      gif_list: [],\r\n      total: 0,\r\n      title: [],\r\n      picAvailable: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    \r\n    const random = this.state.random;\r\n    const trending = this.state.trending;\r\n    const regular = this.state.regular;\r\n    const searchTerm = this.state.searchString;\r\n    let totalLength = range(0, this.state.total - 1);\r\n    let picList =\r\n      this.state.total > 0\r\n        ? this.state.gif_list.map((i) => {\r\n            return <GifTile imgSource={i[0]} title={i[1]} />;\r\n          })\r\n        : null;\r\n\r\n    return (\r\n      <div className={classes.mainDiv}>\r\n        <div className={classes.buttonDiv}>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            type=\"button\"\r\n            name=\"regular\"\r\n            value=\"regular\"\r\n            checked={regular ? true : false}\r\n            onClick={this.handleRegular}\r\n          >\r\n            Regular\r\n          </button>\r\n          &emsp;\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            type=\"button\"\r\n            name=\"random\"\r\n            value=\"random\"\r\n            onClick={this.handleRandom}\r\n          >\r\n            Random\r\n          </button>\r\n          &emsp;\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            type=\"button\"\r\n            name=\"trending\"\r\n            value=\"trending\"\r\n            checked={trending ? true : false}\r\n            onClick={this.handleTrending}\r\n          >\r\n            Trending\r\n          </button>\r\n        </div>\r\n        <br />\r\n        {regular ? (\r\n          <div className={\"container p-3 my-3 bg-dark text-white\"}>\r\n            <form onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"form-control form-control-lg\"\r\n              placeholder=\"Lets get some memes in this place\"\r\n              onChange={this.handleChange}\r\n            ></input>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              style={{ left: \"50%\", position: \"relative\" }}        \r\n            >\r\n              {\" \"}\r\n              Show me memes{\" \"}\r\n              </button>\r\n              </form>\r\n          </div>\r\n        ) : null}\r\n        <div\r\n          className={\"container p-3 my-3 bg-dark \"}\r\n          style={{\r\n\r\n            borderRadius: \"1%\",\r\n            boxShadow: \"0 10px 20px rgba(0,0,0,.7)\",\r\n            textAlign: \"center\",\r\n            color: \"#efefef\",\r\n            maxHeight: \"35vw\",\r\n            overflow:\"scroll\"\r\n          }}\r\n        >\r\n          {this.state.picAvailable ? (\r\n            <div style={{\r\n              display: 'grid',\r\n              gridTemplateColumns: \"auto auto auto\",\r\n              color:\"black\"\r\n            }}>{picList}</div>\r\n          ) : (\r\n            <h2>Nothing to Show. Maybe try searching something</h2>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://api.giphy.com/v1/gifs/search?q=${this.state.searchString}&api_key=${API}`\r\n      )\r\n      .then((res) => {\r\n        let data = res.data.data;\r\n        let url_list = [];\r\n        let count = range(0, res.data.pagination.count - 1);\r\n        count.map((i) => {\r\n          url_list.push([data[i].images.downsized_large.url, data[i].title]);\r\n        });\r\n        this.setState({\r\n          gif_list: url_list,\r\n          total: res.data.pagination.count,\r\n          picAvailable: true,\r\n        });\r\n        console.log(this.state.gif_list[0].images);\r\n      })\r\n      .catch((err) => {\r\n        console.log(`Error: ${err}`);\r\n      });\r\n  };\r\n  handleRandom = (event) => {\r\n    if (\r\n      this.state.random === false &&\r\n      (this.state.regular === true || this.state.trending === true))\r\n{\r\n      axios.get(`https://api.giphy.com/v1/gifs/random?api_key=${API}`)\r\n        .then((res) => {\r\n          let url_list = [[res.data.data.images.downsized_large.url,res.data.data.title]];\r\n          this.setState({\r\n            gif_list: url_list,\r\n            total: 1,\r\n            picAvailable: true,\r\n            random: true,\r\n            regular: false,\r\n            trending: false,\r\n          });\r\n          console.log(this.state.gif_list);\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Error: ${err}`);\r\n        });\r\n    } else {\r\n      console.log(\"eeee\");\r\n    }\r\n  };\r\n  handleRegular = (event) => {\r\n    if (\r\n      this.state.regular === false &&\r\n      (this.state.random === true || this.state.trending === true)\r\n    ) {\r\n      this.setState({\r\n        random: false,\r\n        regular: true,\r\n        trending: false,\r\n        picAvailable: false,\r\n      });\r\n    } else {\r\n      console.log(\"eeee\");\r\n    }\r\n  };\r\n  handleChange = (event) => {\r\n    let value = event.target.value;\r\n    this.setState({ searchString: value });\r\n  };\r\n  handleTrending = (event) => {\r\n    if (\r\n      this.state.trending === false &&\r\n      (this.state.regular === true || this.state.random === true)\r\n    ) {\r\n      axios\r\n        .get(`https://api.giphy.com/v1/gifs/trending?api_key=${API}`)\r\n        .then((res) => {\r\n          let data = res.data.data;\r\n          let url_list = [];\r\n          let count = range(0, res.data.pagination.count - 1);\r\n          count.map((i) => {\r\n            url_list.push([data[i].images.downsized_large.url, data[i].title]);\r\n          });\r\n          this.setState({\r\n            random: false,\r\n            regular: false,\r\n            trending: true,\r\n            gif_list: url_list,\r\n            total: res.data.pagination.count,\r\n            picAvailable: true,\r\n          });\r\n          let a = range(0, 24);\r\n          a.map((i) => console.log(url_list));\r\n        })\r\n        .catch((err) => {\r\n          console.log(`Error: ${err}`);\r\n        });\r\n    } else {\r\n      console.log(\"eeee\");\r\n    }\r\n  };\r\n}\r\nfunction range(start, end) {\r\n  var foo = [];\r\n  for (var i = start; i <= end; i++) {\r\n    foo.push(i);\r\n  }\r\n  return foo;\r\n}\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport SearchBox from \"./Components/searchbox\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <SearchBox/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}